name: FiapVideos CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      - name: List target directory
        run: ls -la target/

      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          docker build -t rodrigoamora/rodrigo-springboot:latest .
          docker tag rodrigoamora/rodrigo-springboot:latest rodrigoamora/rodrigo-springboot:${{ github.sha }}
          docker push rodrigoamora/rodrigo-springboot:latest
          docker push rodrigoamora/rodrigo-springboot:${{ github.sha }}

      - name: Copy files to EC2
        if: github.ref == 'refs/heads/main'
        env:
          PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
          HOST: ${{ secrets.EC2_HOST }}
          USERNAME: ${{ secrets.EC2_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          
          # Criar diretório da aplicação e prometheus
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${USERNAME}@${HOST} '
            sudo rm -rf ~/app
            mkdir -p ~/app/prometheus
          '
          
          # Criar arquivo de configuração do Prometheus
          echo 'global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: "spring-actuator"
              metrics_path: "/actuator/prometheus"
              static_configs:
                - targets: ["fiap-videos:8082"]' > prometheus.yml
          
          # Copiar arquivos
          scp -o StrictHostKeyChecking=no -i private_key.pem \
            docker-compose.yml \
            prometheus.yml \
            ${USERNAME}@${HOST}:~/app/prometheus/
          
          # Executar deploy
          ssh -o StrictHostKeyChecking=no -i private_key.pem ${USERNAME}@${HOST} '
            cd ~/app && \
            sudo chown -R ${USER}:${USER} . && \
            docker-compose down --volumes && \
            docker-compose pull && \
            docker-compose up -d
          '
          
          rm -f private_key.pem

  deploy:
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            mkdir -p ~/app
            cd ~/app
            docker-compose pull
            docker-compose up -d
            docker-compose logs --tail=100
